{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst datetimePicker = document.getElementById(\"datetime-picker\");\nconst startButton = document.querySelector('[data-start]');\nconst timerFields = document.querySelectorAll('.value');\nlet userSelectedDate = null;\nlet timerInterval = null;\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(datetimePicker, options);\n\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction startTimer() {\n  startButton.disabled = true;\n  datetimePicker.disabled = true;\n\n  timerInterval = setInterval(() => {\n    const timeLeft = userSelectedDate - new Date();\n    if (timeLeft <= 0) {\n      clearInterval(timerInterval);\n      startButton.disabled = true;\n      datetimePicker.disabled = false;\n      iziToast.success({\n        title: 'Success',\n        message: 'The timer has ended!',\n      });\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeLeft);\n\n    timerFields[0].textContent = addLeadingZero(days);\n    timerFields[1].textContent = addLeadingZero(hours);\n    timerFields[2].textContent = addLeadingZero(minutes);\n    timerFields[3].textContent = addLeadingZero(seconds);\n  }, 1000);\n}\n\n\nstartButton.addEventListener('click', startTimer);\n"],"names":["datetimePicker","startButton","timerFields","userSelectedDate","timerInterval","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","startTimer","timeLeft"],"mappings":"+IAMA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,iBAAiB,QAAQ,EACtD,IAAIC,EAAmB,KACnBC,EAAgB,KAGpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,EAAmB,IAAI,MACzBI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDN,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEAO,EAAUR,EAAgBK,CAAO,EAGjC,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,GAAa,CACpBhB,EAAY,SAAW,GACvBD,EAAe,SAAW,GAE1BI,EAAgB,YAAY,IAAM,CAChC,MAAMc,EAAWf,EAAmB,IAAI,KACxC,GAAIe,GAAY,EAAG,CACjB,cAAcd,CAAa,EAC3BH,EAAY,SAAW,GACvBD,EAAe,SAAW,GAC1BO,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,sBACjB,CAAO,EACD,MACD,CAED,KAAM,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUS,CAAQ,EAE5DhB,EAAY,CAAC,EAAE,YAAca,EAAeJ,CAAI,EAChDT,EAAY,CAAC,EAAE,YAAca,EAAeH,CAAK,EACjDV,EAAY,CAAC,EAAE,YAAca,EAAeF,CAAO,EACnDX,EAAY,CAAC,EAAE,YAAca,EAAeD,CAAO,CACpD,EAAE,GAAI,CACT,CAGAb,EAAY,iBAAiB,QAASgB,CAAU"}